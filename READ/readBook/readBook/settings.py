"""
Django settings for readBook project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 引入自创建的目录
sys.path.insert(0, os.path.join(BASE_DIR, 'app'))
sys.path.insert(1, os.path.join(BASE_DIR, 'extapp'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%p)74f4!%9)^(z2+&00l2q4s4j_ng2ep8n&w4#38v%=s4x4a!7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'xadmin',
    'crispy_forms',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myApp',
    'DjangoUeditor',  #　加入富文本插件
    'user',
    'djcelery',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'readBook.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'readBook.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'db_books',
        'USER': 'root',
        'PASSWORD': 'shi0311',
        'HOST': 'localhost',
        'PORT': 3306
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = os.path.join(BASE_DIR, 'static'),
# 表示媒体文件实际在文件系统中存放位置
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/media')
# 表示ｈttp访问媒体文件的路径，相对于web服务器的
MEDIA_URL = '/static/media/'


# -----日志配置---------

LOGGING = {
    'version': 1,
    'disable_exist_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(asctime)s]-%(filename)s at %(lineno)d -> %(message)s',
            'datefmt':'%Y-%m-%d %H:%M:s'
        }
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'simple',
            'filename': 'readBook.log'
        }
    },
    'loggers': {
        'readBook': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True

        }
    }
}


# -----end 日志配置------
# 配置redis缓存
#
# CACHES = {
#     'default': {
#     'BACKEND':'django_redis.cache.RedisCache',
#     'LOCATION': 'redis://127.0.0.1:6379/6',
#     'OPTIONS': {
#         "CLIENT_CLASS": "django_redis.client.DefaultClient"
#     }
#    }
# }
#
# SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

# ------Redis缓存--------
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/6',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        }
    }
}
# ------Redis缓存  END---

# 配置session的引擎－cache
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

# 配置celery
import djcelery

djcelery.setup_loader()
BROKER_URL = 'redis://127.0.0.1:6379/7'
CELERY_IMPORTS = ('valid.tasks')
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
# from celery.schedules import crontab
# from celery.schedules import timede
